on: 
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. v1.0.0)'
        required: true
        type: string

env:
  # Godot version to use for build
  GODOT_VERSION: 3.5-beta1
  # Prefix of the release asset (zip files)
  PACKAGE_PREFIX: ${{ github.event.repository.name }} # use gh repository name
  VERSION: ${{ github.event.inputs.version }} # this only works with workflow dispatch, for automatic releases the version has to supplied somehow else

jobs:
  # job id, can be anything
  BuildOnLinux:
    runs-on: ubuntu-latest
    name: Export Game

    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: Cache godot binaries and templates
      id: cache
      uses: actions/cache@v2
      with:
        path: |
          ./bin
          /home/runner/.local/share/godot/templates
          /Users/runner/Library/Application Support/Godot/templates
        key: godot-${{ env.GODOT_VERSION }}-linux

    - name: Install Godot + Templates
      if: steps.cache.outputs.cache-hit != 'true'
      # run: zx ./scripts/download-godot.mjs ${{env.GODOT_VERSION}}
      run: |
        mkdir bin

        # Prereleases have the prerelease identifier (e.g. 'beta1') while stable releases have 'stable'
        SUFFIX=$(if [ -z "$PRERELEASE" ];then echo stable; else echo $PRERELEASE;  fi)

        BASE_URL=https://downloads.tuxfamily.org/godotengine/$GODOT_VERSION/$PRERELEASE/Godot_v$GODOT_VERSION-$SUFFIX
        
        # Download and extract godot binary
        curl $BASE_URL"_x11.64.zip" -o bin/godot.zip
        # curl $BASE_URL"_osx.universal.zip" -o bin/godot.zip
        7z x -y bin/godot.zip -obin

        # Download and extract export templates
        curl $BASE_URL"_export_templates.tpz" -o bin/templates.zip
        7z e -y bin/templates.zip -o"/home/runner/.local/share/godot/templates/$GODOT_VERSION.$SUFFIX"
        # 7z e -y bin/templates.zip -o"~/Library/Application Support/Godot/templates/$GODOT_VERSION.$SUFFIX"

    - run: mkdir build

    - name: Build for linux
      run: |
        ./bin/Godot_v\*_linux_headless.64 --no-window --export linux 
        7z a -sdel release/${{ env.PACKAGE_PREFIX }}-linux.zip build/*

    - name: Build html export
      run: |
        ./bin/Godot_v\*_linux_headless.64 --no-window --export html 
        7z a -sdel release/${{ env.PACKAGE_PREFIX }}-html.zip build/*

      # Build windows export on linux, because windows is dumb
    - name: Build windows export
      run: |
        ./bin/Godot_v\*_linux_headless.64 --no-window --export windows 
        7z a -sdel release/${{ env.PACKAGE_PREFIX }}-windows.zip build/*
    
    - uses: actions/upload-artifact@v2
      with:
        name: release
        path: ./release/*.zip


  FinishRelease:
    needs: [BuildOnLinux]
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
      # Ensure that you get the entire project history
      with:
        fetch-depth: 0
      # separate step to extract the version from the tag name
    - uses: actions/download-artifact@v2
      id: download
      with:
        name: release
        path: ./release/
    - run: ls ./release -lah
    - id: create-release
      run: |
        gh release create $VERSION --target $TARGET --generate-notes release/*
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }} # special GITHUB token defined in secrets, to allow automatic start of following action
        VERSION: ${{env.VERSION}}
        TARGET: ${{ github.sha }}
